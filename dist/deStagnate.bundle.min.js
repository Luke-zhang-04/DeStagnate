"use strict";function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArrayLimit(arr,i){if(typeof Symbol==="undefined"||!(Symbol.iterator in Object(arr))){return}var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i){break}}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null){_i["return"]()}}finally{if(_d){throw _e}}}return _arr}function _arrayWithHoles(arr){if(Array.isArray(arr)){return arr}}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&Symbol.iterator in Object(iter)){return Array.from(iter)}}function _arrayWithoutHoles(arr){if(Array.isArray(arr)){return _arrayLikeToArray(arr)}}function _createForOfIteratorHelper(o,allowArrayLike){var it;if(typeof Symbol==="undefined"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length==="number"){if(it){o=it}var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length){return{done:true}}return{done:false,value:o[i++]}},e:function e(_e3){throw _e3},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var normalCompletion=true,didErr=false,err;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();normalCompletion=step.done;return step},e:function e(_e4){didErr=true;err=_e4},f:function f(){try{if(!normalCompletion&&it["return"]!=null){it["return"]()}}finally{if(didErr){throw err}}}}}function _unsupportedIterableToArray(o,minLen){if(!o){return}if(typeof o==="string"){return _arrayLikeToArray(o,minLen)}var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor){n=o.constructor.name}if(n==="Map"||n==="Set"){return Array.from(o)}if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)){return _arrayLikeToArray(o,minLen)}}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length){len=arr.length}for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i]}return arr2}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor){descriptor.writable=true}Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){if(protoProps){_defineProperties(Constructor.prototype,protoProps)}if(staticProps){_defineProperties(Constructor,staticProps)}return Constructor}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function")}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass){_setPrototypeOf(subClass,superClass)}}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o};return _setPrototypeOf(o,p)}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else{result=Super.apply(this,arguments)}return _possibleConstructorReturn(this,result)}}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)==="object"||typeof call==="function")){return call}return _assertThisInitialized(self)}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return self}function _isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct){return false}if(Reflect.construct.sham){return false}if(typeof Proxy==="function"){return true}try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true}catch(e){return false}}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o)};return _getPrototypeOf(o)}function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj}}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj}}return _typeof(obj)}var DeStagnate=function(t){var e={};function n(r){if(e[r]){return e[r].exports}var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e){return t}if(4&e&&"object"==_typeof(t)&&t&&t.__esModule){return t}var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t){for(var o in t){n.d(r,o,function(e){return t[e]}.bind(null,o))}}return r},n.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{"default":t}};Object.defineProperty(e,"__esModule",{value:!0}),e.createElement=void 0;var o=r(n(1)),i=r(n(2));var s=function(_o$default){_inherits(s,_o$default);var _super=_createSuper(s);function s(t,e){var _this;_classCallCheck(this,s);if(_this=_super.call(this),_this.props=e,_this.createElement=s.createElement,_this._state={},_this._didSetInitialState=!1,_this.getSnapshotBeforeUpdate=function(t,e){return[t,e]},_this.setState=function(t){try{_this.componentWillUpdate();for(var _i=0,_Object$keys=Object.keys(t);_i<_Object$keys.length;_i++){var _e2=_Object$keys[_i];if(!Object.keys(_this.state).includes(_e2)){throw new Error("A new key (".concat(_e2,") should not be set with setState, which has keys ").concat(JSON.stringify(Object.keys(_this.state)),". Declare all state variables in constructor."))}}Object.assign(_this._state,t),_this._removeChildren();var _e=_this.render();if(_e instanceof Array){var _iterator=_createForOfIteratorHelper(_e),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _t=_step.value;_this._parent.appendChild(_t)}}catch(err){_iterator.e(err)}finally{_iterator.f()}}else _this._parent.appendChild(_e);_this.componentDidUpdate()}catch(t){return _this.componentDidCatch(t),t}},_this.mountComponent=function(){try{var _t2=_this.render();if(_this.componentWillMount(),!_t2){throw new Error("Expected render method to be included in component class, no render method found, or render returned an empty array")}return _this.componentDidMount(),_t2 instanceof Array?_t2.map(function(t){return _this._parent.appendChild(t)}):_this._parent.appendChild(_t2)}catch(t){return _this.componentDidCatch(t),t}},_this.mount=_this.mountComponent,_this.unmountComponent=function(){try{_this.componentWillUnmount(),_this._removeChildren()}catch(t){_this.componentDidCatch(t)}},_this.unmount=_this.unmountComponent,_this._removeChildren=function(){for(;_this._parent.firstChild&&_this._parent.lastChild;){_this._parent.removeChild(_this._parent.lastChild)}},["body","html"].includes(t.tagName.toLowerCase())){throw new Error("WARNING! Avoid using ".concat(t.tagName.toLowerCase()," as element parent, as all elements within ").concat(t.tagName.toLowerCase()," will be removed on re-render"))}_this._parent=t;return _possibleConstructorReturn(_this)}_createClass(s,[{key:"getState",get:function get(){return this.state}},{key:"state",get:function get(){return this._state},set:function set(t){this._didSetInitialState?(this.componentDidCatch(new Error("Do not mutate state directly. Use setState instead")),this.setState(t)):(this._state=t,this._didSetInitialState=!0)}},{key:"getProps",get:function get(){return this.props}}]);return s}(o["default"]);e["default"]=s,s.createElement=i["default"],e.createElement=i["default"]},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e["default"]=function(){function _class(){_classCallCheck(this,_class);this.componentDidCatch=function(t){return console.error(t)},this.componentDidMount=function(){},this.componentDidUpdate=function(){},this.componentWillMount=function(){},this.componentWillUnmount=function(){},this.componentWillUpdate=function(){},this.render=function(){return null}}return _class}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function r(t){var e=[];var _iterator2=_createForOfIteratorHelper(t),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var _n=_step2.value;"object"==_typeof(_n)&&_n instanceof Array?e.push.apply(e,_toConsumableArray(r(_n))):e.push(_n)}}catch(err){_iterator2.e(err)}finally{_iterator2.f()}return e},o=function o(t,e){if(e||0===e){if(e instanceof Array){var _iterator3=_createForOfIteratorHelper(e),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var _n2=_step3.value;"string"==typeof _n2||"number"==typeof _n2?t.innerText=_n2.toString():"object"==_typeof(_n2)&&_n2 instanceof Array?r(_n2).forEach(function(e){return o(t,e)}):t.appendChild(_n2)}}catch(err){_iterator3.e(err)}finally{_iterator3.f()}}else"string"==typeof e||"number"==typeof e?t.innerText=e.toString():t.appendChild(e)}};e["default"]=function(t,e,n){var s=document.createElement(t);(function(t,e){if(e){for(var _i2=0,_Object$entries=Object.entries(e);_i2<_Object$entries.length;_i2++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i2],2),_n3=_Object$entries$_i[0],_r=_Object$entries$_i[1];"string"==typeof _r?"innerHTML"===_n3?t.innerHTML=_r.toString():t.setAttribute(_n3,_r.toString()):"on"===_n3.slice(0,2)&&"function"==typeof _r&&t.addEventListener(_n3.slice(2).toLowerCase(),_r)}}})(s,e);var a=n;for(var _len=arguments.length,i=new Array(_len>3?_len-3:0),_key=3;_key<_len;_key++){i[_key-3]=arguments[_key]}return n&&i&&(a="object"==_typeof(n)&&n instanceof Array?[].concat(_toConsumableArray(r(n)),_toConsumableArray(r(i))):[n].concat(_toConsumableArray(r(i)))),o(s,a),s}}]);

//# sourceMappingURL=data:application/json;charset=utf-8;base64,