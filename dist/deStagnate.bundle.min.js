"use strict";function _createForOfIteratorHelper(o,allowArrayLike){var it;if(typeof Symbol==="undefined"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length==="number"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]}},e:function e(_e2){throw _e2},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var normalCompletion=true,didErr=false,err;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();normalCompletion=step.done;return step},e:function e(_e3){didErr=true;err=_e3},f:function f(){try{if(!normalCompletion&&it["return"]!=null)it["return"]()}finally{if(didErr)throw err}}}}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i]}return arr2}function _iterableToArrayLimit(arr,i){if(typeof Symbol==="undefined"||!(Symbol.iterator in Object(arr)))return;var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function")}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o};return _setPrototypeOf(o,p)}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else{result=Super.apply(this,arguments)}return _possibleConstructorReturn(this,result)}}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)==="object"||typeof call==="function")){return call}return _assertThisInitialized(self)}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return self}function _isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true}catch(e){return false}}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o)};return _getPrototypeOf(o)}function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj}}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj}}return _typeof(obj)}var DeStagnate=function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==_typeof(e)&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e){n.d(o,r,function(t){return e[t]}.bind(null,r))}return o},n.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{"default":e}};Object.defineProperty(t,"__esModule",{value:!0}),t.createElement=void 0;var r=o(n(1)),i=o(n(2));var s=function(_r$default){_inherits(s,_r$default);var _super=_createSuper(s);function s(e,t){var _this;_classCallCheck(this,s);_this=_super.call(this),_this.props=t,_this.state={},_this.setState=function(e){for(_this.componentWillUpdate(),Object.assign(_this.state,e);_this.parent.firstChild&&_this.parent.lastChild;){_this.parent.removeChild(_this.parent.lastChild)}_this.parent.appendChild(_this.render()),_this.componentDidUpdate()},_this.mountComponent=function(){var e=_this.render();if(_this.componentWillMount(),!e){var _e="Expected render method to be included in component class, no render method found";return console.error(_e),Error(_e)}return _this.componentDidMount(),_this.parent.appendChild(e)},_this.mount=_this.mountComponent,_this.unmountComponent=function(){_this.componentWillUnmount(),_this.parent.remove()},_this.unmount=_this.unmountComponent,["body","html"].includes(e.tagName.toLowerCase())&&console.warn("WARNING! Avoid using ".concat(e.tagName.toLowerCase()," as element parent, as all elements within ").concat(e.tagName.toLowerCase()," will be removed on re-render")),_this.parent=e;return _this}return s}(r["default"]);t["default"]=s,s.createElement=i["default"],t.createElement=i["default"]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t["default"]=function(){function _class(){_classCallCheck(this,_class);this.componentDidMount=function(){},this.componentDidUpdate=function(){},this.componentWillMount=function(){},this.componentWillUnmount=function(){},this.componentWillUpdate=function(){},this.render=function(){return null}}return _class}()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t["default"]=function(e,t,n){var o=document.createElement(e);return function(e,t){if(t)for(var _i=0,_Object$entries=Object.entries(t);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),_n=_Object$entries$_i[0],_o=_Object$entries$_i[1];"string"==typeof _o?"innerHTML"===_n?e.innerHTML=_o.toString():e.setAttribute(_n,_o.toString()):"on"===_n.slice(0,2)&&"function"==typeof _o&&e.addEventListener(_n.slice(2).toLowerCase(),_o)}}(o,t),function(e,t){if(t||0===t)if(t instanceof Array){var _iterator=_createForOfIteratorHelper(t),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _n2=_step.value;"string"==typeof _n2||"number"==typeof _n2?e.innerText=_n2.toString():e.appendChild(_n2)}}catch(err){_iterator.e(err)}finally{_iterator.f()}}else"string"==typeof t||"number"==typeof t?e.innerText=t.toString():e.appendChild(t)}(o,n),o}}]);

//# sourceMappingURL=data:application/json;charset=utf-8;base64,