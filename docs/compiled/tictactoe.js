!function(){"use strict";
/**
   * DeStagnate: A lightweight wrapper around vanilla DOM methods
   *
   * @license MIT
   * @version 3.0.0
   * @copyright 2020 - 2024 Luke Zhang
   */const e=(t,n)=>{if(null!=n&&!1!==n)if(n instanceof Array)for(const o of n)e(t,o);else"boolean"==typeof n||"number"==typeof n||"bigint"==typeof n||"string"==typeof n?t.appendChild(document.createTextNode(n.toString())):n instanceof Node&&t.appendChild(n)};function t(t,n,...o){if("string"==typeof t){const r=document.createElement(t);return((e,t,n=!1)=>{if(t)for(const[o,r]of Object.entries(t))"boolean"==typeof r||"number"==typeof r||"bigint"==typeof r||"string"==typeof r?"innerHTML"===o?e.innerHTML=r.toString():n?e.setAttributeNS(null,o,r.toString()):e.setAttribute(o,r.toString()):"on"===o.slice(0,2)?"function"==typeof r&&e.addEventListener(o.slice(2).toLowerCase(),r):"ref"===o&&"object"==typeof r&&"current"in r?r.current=e:null!=r&&console.warn(`${typeof r} ${r} is not a valid DeStagnate prop`)})(r,n),e(r,o),r}return"function"==typeof t?t(n,o):Error(`${typeof t} ${t} is of invalid type.`)}let n="x";class o{constructor(){this.clicked="",this.ref=((e=null)=>({current:e}))()}update(e){this.clicked=e,this.ref.current&&(this.ref.current.innerText=e)}}const r=[[new o,new o,new o],[new o,new o,new o],[new o,new o,new o]],c=()=>{for(let e=0;e<3;e++){const t=[0,1,2].map((t=>r[e][t].clicked)),n=[0,1,2].map((t=>r[t][e].clicked));if(t[0]===t[1]&&t[1]===t[2]&&t[0])return t[0];if(n[0]===n[1]&&n[1]===n[2]&&n[0])return n[0]}const e=[[r[0][0].clicked,r[1][1].clicked,r[2][2].clicked],[r[0][2].clicked,r[1][1].clicked,r[2][0].clicked]];for(const t of e)if(t[0]===t[1]&&t[1]===t[2]&&t[0])return t[0];return""},i=document.getElementById("nested"),l=document.getElementById("nested-reset-btn");null==i||i.appendChild(t(((t,...n)=>{const o=document.createDocumentFragment();return(null==t?void 0:t.ref)&&(t.ref.current=o),e(o,n),o}),null,r.map((e=>t("div",{class:"row"},e.map((e=>t("div",{class:"col-4",onClick:()=>{""===e.clicked&&e.update(n),n="x"===n?"o":"x",c()&&alert(`Player ${c()} has won the game!`)}},t("div",{class:"tictactoe-square",ref:e.ref},e.clicked))))))))),null==l||l.addEventListener("click",(()=>{for(const e of r)for(const t of e)t.update("")}))}();
